from time import gmtime, strftime
from datetime import datetime

import sweepconfig

# -*- coding: utf-8 -*-
"""
Automatic code generated by FoV Sweep Configurator tool
It creates a python script that commands the sweep actions and
triggers the frame acquistion shots for the configured FoV 
scanning action.
It is base (apart from python) in OpenCv.
To be successfully executed, you must provide local functions 
to give to this script the exact information needed (video source number)
and the functions to move the motors, this must included in a custom
module called "sweepsupport".
"""
if sweepconfig.cte_use_cvcam:
    import cv2

if sweepconfig.cte_use_photocam:
    import subprocess

if sweepconfig.cte_use_gphoto2:
    import gphoto2capture

import sqlite3
import sweepsupport as sws
import urllib

def import_URL(URL):
    exec urllib.urlopen(URL).read() in globals()

####### Functions API ################

### Commands the motor to the position of that step
def commandMotor(x,y):
    if (sweepconfig.cte_verbose):
      print ("Sweep step X: " + str(x) + " Y: " + str(y))
      return sws.commandMotor(x,y)

### Investigate if the current step has been executed
### you can also include here the user interaction, allowing
### him/her to quit the scanning operation
def stepDone():
    # Wait for command or step time
    # returns are:
    #   -1 if the sweep operation must be cancelled
    #   1 if the step has been done and the frame must be acquired
    #   0 does nothing, non blocking implementation is welcome
    return sws.stepDone()

sqlsentence ="INSERT INTO \"sweep_ex_logs\" (\"step\", \"x\", \"y\", \"x_coord\", \"y_coord\", \"mx\", \"my\", \"mcomp\", \"mx_fdback\", \"my_fdback\", \"mcomp_fdback\", \"timestr\", \"sweep_eng_run_id\", \"dtinit\", \"dtend\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) "

sqlprepare="CREATE TABLE IF NOT EXISTS \"sweep_ex_logs\" (\"id\" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, \"mx\" float, \"my\" float, \"mcomp\" float, \"created_at\" datetime, \"updated_at\" datetime, \"sweep_eng_run_id\" integer, \"step\" integer, \"x\" integer, \"y\" integer, \"x_coord\" float, \"y_coord\" float, \"timestr\" varchar, \"dtinit\" datetime, \"dtend\" datetime, \"mx_fdback\" float, \"my_fdback\" float, \"mcomp_fdback\" float);"

def dbinsert(dbc, curStep, stepX, stepY,stepXcoord,stepYcoord,mx,my,mcomp,mx_fdback,my_fdback,mcomp_fdback,timestr,dtinit,dtcam):
    item = [curStep,stepX,stepY,stepXcoord,stepYcoord,mx,my,mcomp,mx_fdback,my_fdback,mcomp_fdback,timestr,
            sweep_ex_id,dtinit,dtcam,dtcam,dtcam]
    dbc.execute(sqlsentence,item)
    return True
    
def dbprepare(dbc):
    dbc.execute(sqlprepare)
    return True
    
###### END Functions ############

###### Automatically generated code ###########

#steps = [ { 'c': (0),'x': (0),'y': (0),'x_coord': (0.0),'y_coord': (0.0) }]
#steps = [ { 'c': (1),'x': (1),'y': (0),'x_coord': (0.0018),'y_coord': (0.0008) }]
#,{ 'c': (1),'x': (1),'y': (0),'x_coord': (0.0018),'y_coord': (0.0) },{ 'c': (2),'x': (1),'y': (1),'x_coord': (0.0018),'y_coord': (0.0008) },{ 'c': (3),'x': (0),'y': (1),'x_coord': (0.0),'y_coord': (0.0008) },{ 'c': (4),'x': (-1),'y': (1),'x_coord': (-0.0018),'y_coord': (0.0008) },{ 'c': (5),'x': (-1),'y': (0),'x_coord': (-0.0018),'y_coord': (0.0) },{ 'c': (6),'x': (-1),'y': (-1),'x_coord': (-0.0018),'y_coord': (-0.0008) },{ 'c': (7),'x': (0),'y': (-1),'x_coord': (0.0),'y_coord': (-0.0008) } ]

# Spiral test 2
sweep_ex_id = 2
steps = [ { 'c': (0),'x': (0),'y': (0),'x_coord': (0.0),'y_coord': (0.0) },{ 'c': (1),'x': (1),'y': (0),'x_coord': (0.0018),'y_coord': (0.0) },{ 'c': (2),'x': (1),'y': (1),'x_coord': (0.0018),'y_coord': (0.0008) },{ 'c': (3),'x': (0),'y': (1),'x_coord': (0.0),'y_coord': (0.0008) },{ 'c': (4),'x': (-1),'y': (1),'x_coord': (-0.0018),'y_coord': (0.0008) },{ 'c': (5),'x': (-1),'y': (0),'x_coord': (-0.0018),'y_coord': (0.0) },{ 'c': (6),'x': (-1),'y': (-1),'x_coord': (-0.0018),'y_coord': (-0.0008) },{ 'c': (7),'x': (0),'y': (-1),'x_coord': (0.0),'y_coord': (-0.0008) },{ 'c': (8),'x': (1),'y': (-1),'x_coord': (0.0018),'y_coord': (-0.0008) },{ 'c': (9),'x': (2),'y': (-1),'x_coord': (0.0036),'y_coord': (-0.0008) },{ 'c': (10),'x': (2),'y': (0),'x_coord': (0.0036),'y_coord': (0.0) },{ 'c': (11),'x': (2),'y': (1),'x_coord': (0.0036),'y_coord': (0.0008) },{ 'c': (12),'x': (2),'y': (2),'x_coord': (0.0036),'y_coord': (0.0016) },{ 'c': (13),'x': (1),'y': (2),'x_coord': (0.0018),'y_coord': (0.0016) },{ 'c': (14),'x': (0),'y': (2),'x_coord': (0.0),'y_coord': (0.0016) },{ 'c': (15),'x': (-1),'y': (2),'x_coord': (-0.0018),'y_coord': (0.0016) },{ 'c': (16),'x': (-2),'y': (2),'x_coord': (-0.0036),'y_coord': (0.0016) },{ 'c': (17),'x': (-2),'y': (1),'x_coord': (-0.0036),'y_coord': (0.0008) },{ 'c': (18),'x': (-2),'y': (0),'x_coord': (-0.0036),'y_coord': (0.0) },{ 'c': (19),'x': (-2),'y': (-1),'x_coord': (-0.0036),'y_coord': (-0.0008) },{ 'c': (20),'x': (-2),'y': (-2),'x_coord': (-0.0036),'y_coord': (-0.0016) },{ 'c': (21),'x': (-1),'y': (-2),'x_coord': (-0.0018),'y_coord': (-0.0016) },{ 'c': (22),'x': (0),'y': (-2),'x_coord': (0.0),'y_coord': (-0.0016) },{ 'c': (23),'x': (1),'y': (-2),'x_coord': (0.0018),'y_coord': (-0.0016) },{ 'c': (24),'x': (2),'y': (-2),'x_coord': (0.0036),'y_coord': (-0.0016) }, ]

# Raster test 1
# sweep_ex_id = 1
# steps = [ { 'c': (0),'x': (0),'y': (0),'x_coord': (-0.0071),'y_coord': (-0.0076) },{ 'c': (1),'x': (1),'y': (0),'x_coord': (-0.005300000000000001),'y_coord': (-0.0076) },{ 'c': (2),'x': (2),'y': (0),'x_coord': (-0.0035000000000000005),'y_coord': (-0.0076) },{ 'c': (3),'x': (3),'y': (0),'x_coord': (-0.0017000000000000001),'y_coord': (-0.0076) },{ 'c': (4),'x': (4),'y': (0),'x_coord': (9.99999999999994e-05),'y_coord': (-0.0076) },{ 'c': (5),'x': (5),'y': (0),'x_coord': (0.001899999999999999),'y_coord': (-0.0076) },{ 'c': (6),'x': (6),'y': (0),'x_coord': (0.0037),'y_coord': (-0.0076) },{ 'c': (7),'x': (7),'y': (0),'x_coord': (0.0055),'y_coord': (-0.0076) },{ 'c': (8),'x': (8),'y': (0),'x_coord': (0.007299999999999999),'y_coord': (-0.0076) },{ 'c': (9),'x': (0),'y': (1),'x_coord': (-0.0071),'y_coord': (-0.0068) },{ 'c': (10),'x': (1),'y': (1),'x_coord': (-0.005300000000000001),'y_coord': (-0.0068) },{ 'c': (11),'x': (2),'y': (1),'x_coord': (-0.0035000000000000005),'y_coord': (-0.0068) },{ 'c': (12),'x': (3),'y': (1),'x_coord': (-0.0017000000000000001),'y_coord': (-0.0068) },{ 'c': (13),'x': (4),'y': (1),'x_coord': (9.99999999999994e-05),'y_coord': (-0.0068) },{ 'c': (14),'x': (5),'y': (1),'x_coord': (0.001899999999999999),'y_coord': (-0.0068) },{ 'c': (15),'x': (6),'y': (1),'x_coord': (0.0037),'y_coord': (-0.0068) },{ 'c': (16),'x': (7),'y': (1),'x_coord': (0.0055),'y_coord': (-0.0068) },{ 'c': (17),'x': (8),'y': (1),'x_coord': (0.007299999999999999),'y_coord': (-0.0068) },{ 'c': (18),'x': (0),'y': (2),'x_coord': (-0.0071),'y_coord': (-0.006) },{ 'c': (19),'x': (1),'y': (2),'x_coord': (-0.005300000000000001),'y_coord': (-0.006) },{ 'c': (20),'x': (2),'y': (2),'x_coord': (-0.0035000000000000005),'y_coord': (-0.006) },{ 'c': (21),'x': (3),'y': (2),'x_coord': (-0.0017000000000000001),'y_coord': (-0.006) },{ 'c': (22),'x': (4),'y': (2),'x_coord': (9.99999999999994e-05),'y_coord': (-0.006) },{ 'c': (23),'x': (5),'y': (2),'x_coord': (0.001899999999999999),'y_coord': (-0.006) },{ 'c': (24),'x': (6),'y': (2),'x_coord': (0.0037),'y_coord': (-0.006) },{ 'c': (25),'x': (7),'y': (2),'x_coord': (0.0055),'y_coord': (-0.006) },{ 'c': (26),'x': (8),'y': (2),'x_coord': (0.007299999999999999),'y_coord': (-0.006) },{ 'c': (27),'x': (0),'y': (3),'x_coord': (-0.0071),'y_coord': (-0.0052) },{ 'c': (28),'x': (1),'y': (3),'x_coord': (-0.005300000000000001),'y_coord': (-0.0052) },{ 'c': (29),'x': (2),'y': (3),'x_coord': (-0.0035000000000000005),'y_coord': (-0.0052) },{ 'c': (30),'x': (3),'y': (3),'x_coord': (-0.0017000000000000001),'y_coord': (-0.0052) },{ 'c': (31),'x': (4),'y': (3),'x_coord': (9.99999999999994e-05),'y_coord': (-0.0052) },{ 'c': (32),'x': (5),'y': (3),'x_coord': (0.001899999999999999),'y_coord': (-0.0052) },{ 'c': (33),'x': (6),'y': (3),'x_coord': (0.0037),'y_coord': (-0.0052) },{ 'c': (34),'x': (7),'y': (3),'x_coord': (0.0055),'y_coord': (-0.0052) },{ 'c': (35),'x': (8),'y': (3),'x_coord': (0.007299999999999999),'y_coord': (-0.0052) },{ 'c': (36),'x': (0),'y': (4),'x_coord': (-0.0071),'y_coord': (-0.004399999999999999) },{ 'c': (37),'x': (1),'y': (4),'x_coord': (-0.005300000000000001),'y_coord': (-0.004399999999999999) },{ 'c': (38),'x': (2),'y': (4),'x_coord': (-0.0035000000000000005),'y_coord': (-0.004399999999999999) },{ 'c': (39),'x': (3),'y': (4),'x_coord': (-0.0017000000000000001),'y_coord': (-0.004399999999999999) },{ 'c': (40),'x': (4),'y': (4),'x_coord': (9.99999999999994e-05),'y_coord': (-0.004399999999999999) },{ 'c': (41),'x': (5),'y': (4),'x_coord': (0.001899999999999999),'y_coord': (-0.004399999999999999) },{ 'c': (42),'x': (6),'y': (4),'x_coord': (0.0037),'y_coord': (-0.004399999999999999) },{ 'c': (43),'x': (7),'y': (4),'x_coord': (0.0055),'y_coord': (-0.004399999999999999) },{ 'c': (44),'x': (8),'y': (4),'x_coord': (0.007299999999999999),'y_coord': (-0.004399999999999999) },{ 'c': (45),'x': (0),'y': (5),'x_coord': (-0.0071),'y_coord': (-0.0036) },{ 'c': (46),'x': (1),'y': (5),'x_coord': (-0.005300000000000001),'y_coord': (-0.0036) },{ 'c': (47),'x': (2),'y': (5),'x_coord': (-0.0035000000000000005),'y_coord': (-0.0036) },{ 'c': (48),'x': (3),'y': (5),'x_coord': (-0.0017000000000000001),'y_coord': (-0.0036) },{ 'c': (49),'x': (4),'y': (5),'x_coord': (9.99999999999994e-05),'y_coord': (-0.0036) },{ 'c': (50),'x': (5),'y': (5),'x_coord': (0.001899999999999999),'y_coord': (-0.0036) },{ 'c': (51),'x': (6),'y': (5),'x_coord': (0.0037),'y_coord': (-0.0036) },{ 'c': (52),'x': (7),'y': (5),'x_coord': (0.0055),'y_coord': (-0.0036) },{ 'c': (53),'x': (8),'y': (5),'x_coord': (0.007299999999999999),'y_coord': (-0.0036) },{ 'c': (54),'x': (0),'y': (6),'x_coord': (-0.0071),'y_coord': (-0.0027999999999999995) },{ 'c': (55),'x': (1),'y': (6),'x_coord': (-0.005300000000000001),'y_coord': (-0.0027999999999999995) },{ 'c': (56),'x': (2),'y': (6),'x_coord': (-0.0035000000000000005),'y_coord': (-0.0027999999999999995) },{ 'c': (57),'x': (3),'y': (6),'x_coord': (-0.0017000000000000001),'y_coord': (-0.0027999999999999995) },{ 'c': (58),'x': (4),'y': (6),'x_coord': (9.99999999999994e-05),'y_coord': (-0.0027999999999999995) },{ 'c': (59),'x': (5),'y': (6),'x_coord': (0.001899999999999999),'y_coord': (-0.0027999999999999995) },{ 'c': (60),'x': (6),'y': (6),'x_coord': (0.0037),'y_coord': (-0.0027999999999999995) },{ 'c': (61),'x': (7),'y': (6),'x_coord': (0.0055),'y_coord': (-0.0027999999999999995) },{ 'c': (62),'x': (8),'y': (6),'x_coord': (0.007299999999999999),'y_coord': (-0.0027999999999999995) },{ 'c': (63),'x': (0),'y': (7),'x_coord': (-0.0071),'y_coord': (-0.002) },{ 'c': (64),'x': (1),'y': (7),'x_coord': (-0.005300000000000001),'y_coord': (-0.002) },{ 'c': (65),'x': (2),'y': (7),'x_coord': (-0.0035000000000000005),'y_coord': (-0.002) },{ 'c': (66),'x': (3),'y': (7),'x_coord': (-0.0017000000000000001),'y_coord': (-0.002) },{ 'c': (67),'x': (4),'y': (7),'x_coord': (9.99999999999994e-05),'y_coord': (-0.002) },{ 'c': (68),'x': (5),'y': (7),'x_coord': (0.001899999999999999),'y_coord': (-0.002) },{ 'c': (69),'x': (6),'y': (7),'x_coord': (0.0037),'y_coord': (-0.002) },{ 'c': (70),'x': (7),'y': (7),'x_coord': (0.0055),'y_coord': (-0.002) },{ 'c': (71),'x': (8),'y': (7),'x_coord': (0.007299999999999999),'y_coord': (-0.002) },{ 'c': (72),'x': (0),'y': (8),'x_coord': (-0.0071),'y_coord': (-0.0011999999999999997) },{ 'c': (73),'x': (1),'y': (8),'x_coord': (-0.005300000000000001),'y_coord': (-0.0011999999999999997) },{ 'c': (74),'x': (2),'y': (8),'x_coord': (-0.0035000000000000005),'y_coord': (-0.0011999999999999997) },{ 'c': (75),'x': (3),'y': (8),'x_coord': (-0.0017000000000000001),'y_coord': (-0.0011999999999999997) },{ 'c': (76),'x': (4),'y': (8),'x_coord': (9.99999999999994e-05),'y_coord': (-0.0011999999999999997) },{ 'c': (77),'x': (5),'y': (8),'x_coord': (0.001899999999999999),'y_coord': (-0.0011999999999999997) },{ 'c': (78),'x': (6),'y': (8),'x_coord': (0.0037),'y_coord': (-0.0011999999999999997) },{ 'c': (79),'x': (7),'y': (8),'x_coord': (0.0055),'y_coord': (-0.0011999999999999997) },{ 'c': (80),'x': (8),'y': (8),'x_coord': (0.007299999999999999),'y_coord': (-0.0011999999999999997) },{ 'c': (81),'x': (0),'y': (9),'x_coord': (-0.0071),'y_coord': (-0.0003999999999999993) },{ 'c': (82),'x': (1),'y': (9),'x_coord': (-0.005300000000000001),'y_coord': (-0.0003999999999999993) },{ 'c': (83),'x': (2),'y': (9),'x_coord': (-0.0035000000000000005),'y_coord': (-0.0003999999999999993) },{ 'c': (84),'x': (3),'y': (9),'x_coord': (-0.0017000000000000001),'y_coord': (-0.0003999999999999993) },{ 'c': (85),'x': (4),'y': (9),'x_coord': (9.99999999999994e-05),'y_coord': (-0.0003999999999999993) },{ 'c': (86),'x': (5),'y': (9),'x_coord': (0.001899999999999999),'y_coord': (-0.0003999999999999993) },{ 'c': (87),'x': (6),'y': (9),'x_coord': (0.0037),'y_coord': (-0.0003999999999999993) },{ 'c': (88),'x': (7),'y': (9),'x_coord': (0.0055),'y_coord': (-0.0003999999999999993) },{ 'c': (89),'x': (8),'y': (9),'x_coord': (0.007299999999999999),'y_coord': (-0.0003999999999999993) },{ 'c': (90),'x': (0),'y': (10),'x_coord': (-0.0071),'y_coord': (0.0004000000000000002) },{ 'c': (91),'x': (1),'y': (10),'x_coord': (-0.005300000000000001),'y_coord': (0.0004000000000000002) },{ 'c': (92),'x': (2),'y': (10),'x_coord': (-0.0035000000000000005),'y_coord': (0.0004000000000000002) },{ 'c': (93),'x': (3),'y': (10),'x_coord': (-0.0017000000000000001),'y_coord': (0.0004000000000000002) },{ 'c': (94),'x': (4),'y': (10),'x_coord': (9.99999999999994e-05),'y_coord': (0.0004000000000000002) },{ 'c': (95),'x': (5),'y': (10),'x_coord': (0.001899999999999999),'y_coord': (0.0004000000000000002) },{ 'c': (96),'x': (6),'y': (10),'x_coord': (0.0037),'y_coord': (0.0004000000000000002) },{ 'c': (97),'x': (7),'y': (10),'x_coord': (0.0055),'y_coord': (0.0004000000000000002) },{ 'c': (98),'x': (8),'y': (10),'x_coord': (0.007299999999999999),'y_coord': (0.0004000000000000002) },{ 'c': (99),'x': (0),'y': (11),'x_coord': (-0.0071),'y_coord': (0.0012000000000000005) },{ 'c': (100),'x': (1),'y': (11),'x_coord': (-0.005300000000000001),'y_coord': (0.0012000000000000005) },{ 'c': (101),'x': (2),'y': (11),'x_coord': (-0.0035000000000000005),'y_coord': (0.0012000000000000005) },{ 'c': (102),'x': (3),'y': (11),'x_coord': (-0.0017000000000000001),'y_coord': (0.0012000000000000005) },{ 'c': (103),'x': (4),'y': (11),'x_coord': (9.99999999999994e-05),'y_coord': (0.0012000000000000005) },{ 'c': (104),'x': (5),'y': (11),'x_coord': (0.001899999999999999),'y_coord': (0.0012000000000000005) },{ 'c': (105),'x': (6),'y': (11),'x_coord': (0.0037),'y_coord': (0.0012000000000000005) },{ 'c': (106),'x': (7),'y': (11),'x_coord': (0.0055),'y_coord': (0.0012000000000000005) },{ 'c': (107),'x': (8),'y': (11),'x_coord': (0.007299999999999999),'y_coord': (0.0012000000000000005) },{ 'c': (108),'x': (0),'y': (12),'x_coord': (-0.0071),'y_coord': (0.002000000000000001) },{ 'c': (109),'x': (1),'y': (12),'x_coord': (-0.005300000000000001),'y_coord': (0.002000000000000001) },{ 'c': (110),'x': (2),'y': (12),'x_coord': (-0.0035000000000000005),'y_coord': (0.002000000000000001) },{ 'c': (111),'x': (3),'y': (12),'x_coord': (-0.0017000000000000001),'y_coord': (0.002000000000000001) },{ 'c': (112),'x': (4),'y': (12),'x_coord': (9.99999999999994e-05),'y_coord': (0.002000000000000001) },{ 'c': (113),'x': (5),'y': (12),'x_coord': (0.001899999999999999),'y_coord': (0.002000000000000001) },{ 'c': (114),'x': (6),'y': (12),'x_coord': (0.0037),'y_coord': (0.002000000000000001) },{ 'c': (115),'x': (7),'y': (12),'x_coord': (0.0055),'y_coord': (0.002000000000000001) },{ 'c': (116),'x': (8),'y': (12),'x_coord': (0.007299999999999999),'y_coord': (0.002000000000000001) },{ 'c': (117),'x': (0),'y': (13),'x_coord': (-0.0071),'y_coord': (0.0028000000000000013) },{ 'c': (118),'x': (1),'y': (13),'x_coord': (-0.005300000000000001),'y_coord': (0.0028000000000000013) },{ 'c': (119),'x': (2),'y': (13),'x_coord': (-0.0035000000000000005),'y_coord': (0.0028000000000000013) },{ 'c': (120),'x': (3),'y': (13),'x_coord': (-0.0017000000000000001),'y_coord': (0.0028000000000000013) },{ 'c': (121),'x': (4),'y': (13),'x_coord': (9.99999999999994e-05),'y_coord': (0.0028000000000000013) },{ 'c': (122),'x': (5),'y': (13),'x_coord': (0.001899999999999999),'y_coord': (0.0028000000000000013) },{ 'c': (123),'x': (6),'y': (13),'x_coord': (0.0037),'y_coord': (0.0028000000000000013) },{ 'c': (124),'x': (7),'y': (13),'x_coord': (0.0055),'y_coord': (0.0028000000000000013) },{ 'c': (125),'x': (8),'y': (13),'x_coord': (0.007299999999999999),'y_coord': (0.0028000000000000013) },{ 'c': (126),'x': (0),'y': (14),'x_coord': (-0.0071),'y_coord': (0.0036) },{ 'c': (127),'x': (1),'y': (14),'x_coord': (-0.005300000000000001),'y_coord': (0.0036) },{ 'c': (128),'x': (2),'y': (14),'x_coord': (-0.0035000000000000005),'y_coord': (0.0036) },{ 'c': (129),'x': (3),'y': (14),'x_coord': (-0.0017000000000000001),'y_coord': (0.0036) },{ 'c': (130),'x': (4),'y': (14),'x_coord': (9.99999999999994e-05),'y_coord': (0.0036) },{ 'c': (131),'x': (5),'y': (14),'x_coord': (0.001899999999999999),'y_coord': (0.0036) },{ 'c': (132),'x': (6),'y': (14),'x_coord': (0.0037),'y_coord': (0.0036) },{ 'c': (133),'x': (7),'y': (14),'x_coord': (0.0055),'y_coord': (0.0036) },{ 'c': (134),'x': (8),'y': (14),'x_coord': (0.007299999999999999),'y_coord': (0.0036) },{ 'c': (135),'x': (0),'y': (15),'x_coord': (-0.0071),'y_coord': (0.0044) },{ 'c': (136),'x': (1),'y': (15),'x_coord': (-0.005300000000000001),'y_coord': (0.0044) },{ 'c': (137),'x': (2),'y': (15),'x_coord': (-0.0035000000000000005),'y_coord': (0.0044) },{ 'c': (138),'x': (3),'y': (15),'x_coord': (-0.0017000000000000001),'y_coord': (0.0044) },{ 'c': (139),'x': (4),'y': (15),'x_coord': (9.99999999999994e-05),'y_coord': (0.0044) },{ 'c': (140),'x': (5),'y': (15),'x_coord': (0.001899999999999999),'y_coord': (0.0044) },{ 'c': (141),'x': (6),'y': (15),'x_coord': (0.0037),'y_coord': (0.0044) },{ 'c': (142),'x': (7),'y': (15),'x_coord': (0.0055),'y_coord': (0.0044) },{ 'c': (143),'x': (8),'y': (15),'x_coord': (0.007299999999999999),'y_coord': (0.0044) },{ 'c': (144),'x': (0),'y': (16),'x_coord': (-0.0071),'y_coord': (0.005200000000000001) },{ 'c': (145),'x': (1),'y': (16),'x_coord': (-0.005300000000000001),'y_coord': (0.005200000000000001) },{ 'c': (146),'x': (2),'y': (16),'x_coord': (-0.0035000000000000005),'y_coord': (0.005200000000000001) },{ 'c': (147),'x': (3),'y': (16),'x_coord': (-0.0017000000000000001),'y_coord': (0.005200000000000001) },{ 'c': (148),'x': (4),'y': (16),'x_coord': (9.99999999999994e-05),'y_coord': (0.005200000000000001) },{ 'c': (149),'x': (5),'y': (16),'x_coord': (0.001899999999999999),'y_coord': (0.005200000000000001) },{ 'c': (150),'x': (6),'y': (16),'x_coord': (0.0037),'y_coord': (0.005200000000000001) },{ 'c': (151),'x': (7),'y': (16),'x_coord': (0.0055),'y_coord': (0.005200000000000001) },{ 'c': (152),'x': (8),'y': (16),'x_coord': (0.007299999999999999),'y_coord': (0.005200000000000001) },{ 'c': (153),'x': (0),'y': (17),'x_coord': (-0.0071),'y_coord': (0.006000000000000001) },{ 'c': (154),'x': (1),'y': (17),'x_coord': (-0.005300000000000001),'y_coord': (0.006000000000000001) },{ 'c': (155),'x': (2),'y': (17),'x_coord': (-0.0035000000000000005),'y_coord': (0.006000000000000001) },{ 'c': (156),'x': (3),'y': (17),'x_coord': (-0.0017000000000000001),'y_coord': (0.006000000000000001) },{ 'c': (157),'x': (4),'y': (17),'x_coord': (9.99999999999994e-05),'y_coord': (0.006000000000000001) },{ 'c': (158),'x': (5),'y': (17),'x_coord': (0.001899999999999999),'y_coord': (0.006000000000000001) },{ 'c': (159),'x': (6),'y': (17),'x_coord': (0.0037),'y_coord': (0.006000000000000001) },{ 'c': (160),'x': (7),'y': (17),'x_coord': (0.0055),'y_coord': (0.006000000000000001) },{ 'c': (161),'x': (8),'y': (17),'x_coord': (0.007299999999999999),'y_coord': (0.006000000000000001) },{ 'c': (162),'x': (0),'y': (18),'x_coord': (-0.0071),'y_coord': (0.006800000000000001) },{ 'c': (163),'x': (1),'y': (18),'x_coord': (-0.005300000000000001),'y_coord': (0.006800000000000001) },{ 'c': (164),'x': (2),'y': (18),'x_coord': (-0.0035000000000000005),'y_coord': (0.006800000000000001) },{ 'c': (165),'x': (3),'y': (18),'x_coord': (-0.0017000000000000001),'y_coord': (0.006800000000000001) },{ 'c': (166),'x': (4),'y': (18),'x_coord': (9.99999999999994e-05),'y_coord': (0.006800000000000001) },{ 'c': (167),'x': (5),'y': (18),'x_coord': (0.001899999999999999),'y_coord': (0.006800000000000001) },{ 'c': (168),'x': (6),'y': (18),'x_coord': (0.0037),'y_coord': (0.006800000000000001) },{ 'c': (169),'x': (7),'y': (18),'x_coord': (0.0055),'y_coord': (0.006800000000000001) },{ 'c': (170),'x': (8),'y': (18),'x_coord': (0.007299999999999999),'y_coord': (0.006800000000000001) },{ 'c': (171),'x': (0),'y': (19),'x_coord': (-0.0071),'y_coord': (0.0076) },{ 'c': (172),'x': (1),'y': (19),'x_coord': (-0.005300000000000001),'y_coord': (0.0076) },{ 'c': (173),'x': (2),'y': (19),'x_coord': (-0.0035000000000000005),'y_coord': (0.0076) },{ 'c': (174),'x': (3),'y': (19),'x_coord': (-0.0017000000000000001),'y_coord': (0.0076) },{ 'c': (175),'x': (4),'y': (19),'x_coord': (9.99999999999994e-05),'y_coord': (0.0076) },{ 'c': (176),'x': (5),'y': (19),'x_coord': (0.001899999999999999),'y_coord': (0.0076) },{ 'c': (177),'x': (6),'y': (19),'x_coord': (0.0037),'y_coord': (0.0076) },{ 'c': (178),'x': (7),'y': (19),'x_coord': (0.0055),'y_coord': (0.0076) },{ 'c': (179),'x': (8),'y': (19),'x_coord': (0.007299999999999999),'y_coord': (0.0076) }, ]
# Vertical compensation test
#sweep_ex_id = 3
#steps = [ { 'c': (0),'x': (0),'y': (0),'x_coord': (0.0),'y_coord': (-0.0076) },{ 'c': (1),'x': (0),'y': (1),'x_coord': (0.0),'y_coord': (-0.0060999999999999995) },{ 'c': (2),'x': (0),'y': (2),'x_coord': (0.0),'y_coord': (-0.0046) },{ 'c': (3),'x': (0),'y': (3),'x_coord': (0.0),'y_coord': (-0.0030999999999999995) },{ 'c': (4),'x': (0),'y': (4),'x_coord': (0.0),'y_coord': (-0.0015999999999999999) },{ 'c': (5),'x': (0),'y': (5),'x_coord': (0.0),'y_coord': (-0.00010000000000000026) },{ 'c': (6),'x': (0),'y': (6),'x_coord': (0.0),'y_coord': (0.001400000000000001) },{ 'c': (7),'x': (0),'y': (7),'x_coord': (0.0),'y_coord': (0.0029000000000000007) },{ 'c': (8),'x': (0),'y': (8),'x_coord': (0.0),'y_coord': (0.0044) },{ 'c': (9),'x': (0),'y': (9),'x_coord': (0.0),'y_coord': (0.0059) }, ]
###### Automatically generated steps table ###########
###### END Automatically generated code ###########


#### START EXECUTION ######

# Prepare the scan loop
curStep=0
done=0
# Create timestamp
timestr=strftime("%Y%m%d%H%M%S", gmtime())

if sweepconfig.cte_use_cvcam:
    # Cam has the video source
    cam = cv2.VideoCapture(sweepconfig.cte_camsource)
    if (sweepconfig.cte_verbose):
        print ("Camera resolution:")
        print ("* Horizontal: " + str(cam.get(cv2.CAP_PROP_FRAME_WIDTH)))
        print ("* Vertical: "+ str(cam.get(cv2.CAP_PROP_FRAME_HEIGHT)))

    #subprocess.check_call("exit 1", shell=True)

if (sweepconfig.cte_disable_motors_first):
    sws.disableMotors()

print("Check initial motor positions")
sws.motorPositions()

if (sweepconfig.cte_enable_motors_first):
    sws.enableMotors()

if (sweepconfig.cte_reset_motors_first):
    sws.resetMotors()
    print("Check motor positions after resets")
    sws.motorPositions()


# Prepare the Database
db = sqlite3.connect('./db/log.sqlite3')
if not(db):
    ret = False
else:
    ret = True
    dbc = db.cursor()
    ret=dbprepare(dbc)

if (ret==False):
    done = -1
    print "Database ERROR! Aborting"




# Steps loop
# until ESC key is pressed
# or steps have finished
endStep = len(steps)
#endStep = 4
while (done!=-1 and curStep < endStep ):
    # In stepX and stepY we have the step positions to be done
    stepX=steps[curStep]['x']
    stepY=steps[curStep]['y']
    stepXcoord=steps[curStep]['x_coord']
    stepYcoord=steps[curStep]['y_coord']
    # Command motor position for this step
    dtinit = datetime.now()
    done,mx,my,mcomp=commandMotor(stepXcoord,stepYcoord)
    # Wait command to end
    while (done==0):
        done=stepDone();
    # END Command motor position for this step    
    if (done!=-1):
        # Acquire image
        dtcam = datetime.now()
        if sweepconfig.cte_use_cvcam:
            ret, frame = cam.read()
            #save to disk
            strg=sweepconfig.cte_fileprefix+'%s_%03d_%03d.png' % (timestr, sweep_ex_id, curStep)
            cv2.imwrite(sweepconfig.cte_framePath + strg, frame)
            #show the image
            cv2.imshow('Current Frame', frame)
        if sweepconfig.cte_use_photocam:
            # We configure the image capture
            strg='D%s_%03d_%03d.jpg' % (timestr, sweep_ex_id, curStep)
            cmd=sweepconfig.cte_cameractrl_path+sweepconfig.cte_cameractrl_command
            args=sweepconfig.cte_cameractrl_filenamecmd+" "+strg
            print("Photo set filename: "+cmd+" "+args)
            subprocess.check_output([cmd,args])
            args=sweepconfig.cte_cameractrl_capturecmd
            print("Photo capture frame: "+cmd+" "+args)
            subprocess.check_output([cmd,args])
        if sweepconfig.cte_use_gphoto2:
            strg=sweepconfig.cte_gphoto2_filename_root+'%s_%03d_%03d.jpg' % (timestr, sweep_ex_id, curStep)
            gphoto2capture.capture(sweepconfig.cte_gphoto2_framePath,strg,False)
        # acquire the motor status
        mx_fdback,my_fdback,mcomp_fdback = sws.motorPositions()
        print ("Motor | mx: "+str(mx_fdback)+", my: "+str(my_fdback)+", mcomp: "+str(mcomp_fdback))
        # Web information upload
        #r = requests.post("http://localhost:3000/sweep_eng_runs/1/sweep_ex_logs/new", data={'sweep_ex_log': {"sweep_eng_run_id":"1", "a":"6", "b":"8", "c":"9"},"sweep_eng_run_id":"1" })
        #print(r.status_code, r.reason)
        # BD information store
        done=dbinsert(dbc,curStep, stepX, stepY,stepXcoord, stepYcoord,mx,my,mcomp,mx_fdback,my_fdback,mcomp_fdback,timestr,dtinit,dtcam)
        curStep += 1

# End of program, steps have finished or someone has cancelled the scan process
if (curStep < len(steps)):
  # Scan process was cancelled
    if (sweepconfig.cte_verbose):
        print ("Scan process was cancelled")
        dummy=0 # Dummy for avoiding indentation failures

db.commit()
db.close()
if sweepconfig.cte_use_cvcam:
    cam.release()
    cv2.destroyAllWindows()
sws.motorClose()

